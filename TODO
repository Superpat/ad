:: TODO

- [ ] feature: Edit log transactions
- [ ] feature: center screen on current line
- [ ] feature: expand tab
- [ ] implement remaining text objects
   >> The implementation for these is yet another way of hunting through the buffer for
      a certain position. Now that the regex engine works it might actually be simpler
     (though probably not faster) to just use that for all text object style Dot changes?
  - Target character
  - Delimited between a given character pair
- [ ] feature: match indent
- [ ] feature: store "desired x" or an "x is at EOL" flag?
- [ ] feature: FUSE filesystem fun...!
  - Whether or not this uses FUSE in the end or not, the Acme style interface for
    supporting extension of the editor is still the plan for how to handle things.
- [ ] feature: mini-buffer tab complete
- [ ] feature: completion of command mode commands
  - To start with this should be simple enough for handling just what is built in
    but supporting listing external scripts and tools would be nice as well
- [!] Dragging the cursor back over itself is broken in a way I don't fully understand
      yet.

-- Structural regular expressions --
- [ ] feature: Piping through a shell command
- [ ] feature: Replace without output from a shell command
- [ ] Look at running grouped expressions in parallel a-la Sam
  - This should be doable by pre-computing the match positions and tracking any edit
    offsets that have built up
- [ ] Storing the history of previous edit commands and allowing for cycling through
      them would be helpful (same for Command mode).
- [ ] Update the current "Command Mode" dummy mode to just take a string for the mode
      name so that it can be re-used nicely rather than just calling EVERYTHING using
      the single line mini-buffer "command mode" in the UI.
